services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: ordem_servicos_postgres
    environment:
      POSTGRES_DB: ordem_servicos
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    networks:
      - ordem_servicos_network
    restart: unless-stopped

  # Cache Redis
  redis:
    image: redis:7-alpine
    container_name: ordem_servicos_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ordem_servicos_network
    restart: unless-stopped

  # Mensageria RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: ordem_servicos_rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - ordem_servicos_network
    restart: unless-stopped

  # Backend Go
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ordem_servicos_backend
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres123
      - DB_NAME=ordem_servicos
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - ordem_servicos_network
    restart: unless-stopped
    volumes:
      - ./backend:/app
      - /app/vendor

  # Frontend Vue 3
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ordem_servicos_frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - ordem_servicos_network
    restart: unless-stopped
    volumes:
      - ./frontend:/app
      - /app/node_modules

  # Nginx (Proxy reverso)
  nginx:
    image: nginx:alpine
    container_name: ordem_servicos_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - ordem_servicos_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:

networks:
  ordem_servicos_network:
    driver: bridge
